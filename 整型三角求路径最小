class Solution {
public:
    int min;
    int flag;
    int minimumTotal(vector<vector<int> > &triangle) {
        int row = triangle.size();
        if(row < 2)
            return triangle[0][0];
        min = 0;
        flag = 1;
        DFS(triangle, row, 0, 0, 0);
        return min;
    }
    void DFS(vector<vector<int> > &triangle, int& row, int s, int r, int c)
    {
        s += triangle[r][c];
        if(r == row-1)
        {
            if(flag)
            {
                min = s;
                flag = 0;
            }
            else
            {
                if(s < min)
                    min = s;
            }
            return;
        }
        DFS(triangle, row, s, r+1, c);
        DFS(triangle, row, s, r+1, c+1);
    }
};

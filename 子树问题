/*
struct TreeNode {
	int val;
	struct TreeNode *left;
	struct TreeNode *right;
	TreeNode(int x) :
			val(x), left(NULL), right(NULL) {
	}
};*/
class Solution {
public:
    bool HasSubtree(TreeNode* pRoot1, TreeNode* pRoot2)
    {
        if(NULL == pRoot1 || NULL == pRoot2)
            return false;
        return PreOrder(pRoot1, pRoot2) || HasSubtree(pRoot1->left, pRoot2) || HasSubtree(pRoot1->right, pRoot2);
    }
    bool PreOrder(TreeNode* pCur1, TreeNode* pCur2)
    {
        if((NULL == pCur1 && NULL == pCur2) || (NULL != pCur1 && NULL == pCur2))
            return true;
        if((pCur1->val != pCur2->val) || (NULL == pCur1 && NULL != pCur2))
            return false;
        return PreOrder(pCur1->left, pCur2->left) && PreOrder(pCur1->right, pCur2->right);
    }
};

/*
struct TreeNode {
    int val;
    struct TreeNode *left;
    struct TreeNode *right;
    TreeNode(int x) :
            val(x), left(NULL), right(NULL) {
    }
};
*/
class Solution {
public:
        vector<vector<int> > Print(TreeNode* pRoot) {
            vector<vector<int> > v;
            if(NULL == pRoot)
                return v;
            typedef TreeNode Node;
            queue<Node*> q1, q2;
            int index = 0;
            q1.push(pRoot);
            while(!q1.empty())
            {
                v.resize(index+1);
                int size = q1.size();
                v[index].resize(size);
                for(int i = 0; i < size; ++i)
                {
                    Node* temp = q1.front();
                    q1.pop();
                    v[index][i] = temp->val;
                    q2.push(temp);
                }
                for(int i = 0; i < size; ++i)
                {
                    Node* temp = q2.front();
                    q2.pop();
                    if(temp->left)
                        q1.push(temp->left);
                    if(temp->right)
                        q1.push(temp->right);
                }
                ++index;
            }
            return v;
        }
    
};
